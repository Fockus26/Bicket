@use '../Index/Variables' as *;
@use '../Index/Functions' as *;

@property --angle{
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: false;
}

#Authentication.signUp {
    button {
        display: flex;
        justify-content: center;
        gap: $gap-small-mobile;
        padding: toRem(20) 0;
        position: relative;
        width: 80%;
        max-width: toRem(160);
        max-height: toRem(160);
        background-color: $color-primary-700;

        &:hover {
            h1, i { color: $color-secondary-400 }
        }

        &.loading, &.ready {
            width: 100%;
            height: 100%;

            &, &:before, &:after { border-radius: 50%; }
        }
        &.loading {
            &:before, &:after { animation: pulse 3s infinite; }

            @keyframes pulse {
                0%, 100% { transform: scale(1); }
                25% { transform: scale(1.025); }
                50% { transform: scale(1); }
                75% { transform: scale(1.025); }
            }    

            i { 
                font-size: toRem(8); 
                animation: bounce 1.5s infinite;

                &:nth-child(1) { animation-delay: 0s; }
                &:nth-child(2) { animation-delay: .3s; }
                &:nth-child(3) { animation-delay: .6s; }

                @keyframes bounce {
                    0%, 100% { transform: translateY(5px); }
                    50% { transform: translateY(0px); }
                }
            }
        }

        &.ready i { font-size: toRem(28); }

        h1, i {
            color: $color-secondary-500;
            font-size: toRem(16);
            transition: $transition;
        }
    }

    button, form.specificData {
        &::after, &::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            translate: -50% -50%;
            z-index: -1;
            height: 100%;
            width: 100%;
            background-image: conic-gradient( from var(--angle), 
                $color-secondary-400, 
                $color-secondary-600, 
                $color-secondary-500, 
                $color-secondary-700, 
                $color-secondary-600, 
                $color-secondary-400
            );
            padding: toRem(2);
            transition: $transition;
            animation: 3s spin linear infinite;
        }
        &::before { filter: blur(toRem(24)); }
    
        @keyframes spin{
            from{ --angle: 0deg; }
            to{ --angle: 360deg; }
        }
    }
    
    form {
        position: relative; 
        display: grid;
        gap: $gap-medium-mobile;
        grid-template-columns: auto 1fr auto;
        max-width: toRem(320);
        height: 66vh;
        background-color: transparent;

        &:not(.specificData):focus-within, &:not(.specificData):hover { 
            .entries:not(.error)  {
                &.error ~ i { color: $color-secondary-400; }

                &.error .entry {
                    input, .floating { color: $color-status-error; }
                    .progress { background-color: $color-status-error; }  
                }
                .entry {
                    input, .floating { color: $color-secondary-400; }
                    .progress { background-color: $color-secondary-400; }    
                } 
            }
        }

        &.specificData {
            grid-template-columns: 1fr;
            max-width: toRem(800);
            padding: toRem(48) toRem(24) toRem(24);
            background-color: $color-primary-900;

            .entries { 
                height: 100%;
                align-items: center;

                /* Tablet and above */
                @media only screen and (min-width: 47.938rem) { grid-template-columns: 1fr 1fr; }

                .entry {
                    grid-template-columns: 1fr;
                    gap: 0;
                    overflow: visible;
                    height: fit-content;
                    border-bottom: toRem(1) solid $color-secondary-600;

                    input {
                        color: $color-secondary-600;
                        text-transform: uppercase;
                    }    
                    
                    &.birthday {
                        border-bottom: 0;
                        /* Tablet and above */
                        @media only screen and (min-width: 47.938rem) { grid-template-columns: 0.6fr 1fr 0.6fr; }
    
                        div {
                            position: relative;
                            border: toRem(2) solid $color-secondary-600;
                            // border-bottom-width: toRem(1);
                            transition: $transition;
    
                            /* Mobile and below */
                            @media only screen and (max-width: 47.938rem) {
                                &:first-child { border-bottom: 0; }
                                &:last-child { border-top: 0; }
                            }
                            /* Tablet and above */
                            @media only screen and (min-width: 47.938rem) {
                                &:first-child { border-right: 0; }
                                &:last-child { border-left: 0; }
                            }
    
                            &:has(input[data-active='true']) {
                                background-color: $color-secondary-600;
                                box-shadow: 0 0 toRem(10) $color-secondary-600, inset 0 0 toRem(10) $color-secondary-600;
                                
                                input { color: $color-primary-900; }
                            }
    
                            input { 
                                text-align: center;
                                padding: toRem(10);
    
                                &::placeholder {
                                    color: $color-secondary-600;
                                    transition: $transition;
                                }
                                &:focus::placeholder { opacity: 0 }
                            }
    
                            &:first-child ul { 
                                left: toRem(-1);
                                width: calc(100% + toRem(3));
                            }
                            &:nth-child(2) ul {
                                left: toRem(-1);
                                width: calc(100% + toRem(2));
                            }
                            &:last-child ul {
                                left: toRem(-2);
                                width: calc(100% + toRem(3));
                            }
    
                            ul { border-top-width: toRem(2); }
                        }
                    }

                    &.phone {
                        grid-template-columns: .15fr .85fr;
                        gap: $gap-small-mobile;

                        input { border-bottom: none; }

                        .number { display: grid; }

                        .code {
                            position: relative;
                            
                            input {
                                border: toRem(1) solid $color-secondary-600;
                                border-bottom: none;
                                text-align: center;
                            }
                        }
                    }
                         
                    &.gender {
                        border: toRem(2) solid $color-secondary-600;
                        box-shadow: 0 0 toRem(10) $color-secondary-600, inset 0 0 toRem(10) $color-secondary-600;
                        border-radius: toRem(2.5);
    
                        /* Tablet and above */
                        @media only screen and (min-width: 47.938rem) { grid-template-columns: 1fr 1fr; }
    
                        label {
                            padding: toRem(10);
                            z-index: 1;
                            cursor: pointer;
                            text-transform: uppercase;
                            transition: $transition;
    
                            &:has(input:checked) { 
                                ~ .slider { background-color: $color-secondary-600; }
                                p { color: $color-primary-900; }
                            }

                            &:nth-child(2):has(input:checked) ~ .slider { 
                                transform: translateY(calc(100% + toRem(2))); 
                                /* Tablet and above */
                                @media only screen and (min-width: 47.938rem) { 
                                    transform: translateX(calc(100% + toRem(2))); 
                                } 
                            }

                            input { display: none; }

                            p {   
                                color: $color-secondary-600;
                                text-align: center;
                                font-weight: $font-weight-semibold;
                                transition: $transition;
                            }
                        }
    
                        .slider {
                            position: absolute;
                            width: 100%;
                            height: 50%;
                            transition: $transition;
    
                            /* Tablet and above */
                            @media only screen and (min-width: 47.938rem) {
                                width: 50%; 
                                height: 100%;
                            }
                        }
                    }
    
                    .floating { color: $color-secondary-600; }
    
                    /* Dropdown Select */
                    ul {
                        position: absolute;
                        top: 100%;
                        background-color: $color-primary-900;
                        border: toRem(2) solid $color-secondary-600;
                        border-top-width: toRem(1);
                        z-index: 10;
                        text-transform: uppercase;
                        width: 100%;
                        max-height: toRem(160);    
                        overflow-y: auto;
                        scrollbar-color: $color-secondary-600 $color-primary-900;
    
                        /* Tablet and above */
                        @media only screen and (min-width: 47.938rem) { scrollbar-width: thin; }
            
                        li {
                            color: $color-secondary-600;
                            padding: toRem(10) 0;
                            text-align: center;
                            cursor: pointer;
                            transition: $transition;
    
                            &:hover {
                                color: $color-primary-900;
                                background-color: $color-secondary-600;
                            }
                        }
            
                    }
                }
             }

            .counter {
                display: flex;
                position: absolute;
                top: toRem(15);
                right: toRem(15);
                color: $color-secondary-600;
                /* Tablet and above */
                @media only screen and (min-width: 47.938rem) {
                  top: toRem(20);
                  right: toRem(20);
                }

                p, i { 
                    font-weight: $font-weight-semibold;
                    transition: $transition; 
                    /* Tablet and above */
                    @media only screen and (min-width: 47.938rem) { font-size: $font-size-title-small-mobile-max; }
                }
                
                i { 
                    cursor: pointer; 
                    transform: translateX(toRem(-5));

                    /* Tablet and above */
                    @media only screen and (min-width: 47.938rem) { transform: translateX(toRem(-10)); }
                }
            }  
        }

        i {
            cursor: pointer;
            color: $color-secondary-500;
            transition: $transition;

            &:first-child:hover { transform: translateX(toRem(-1.6)); }
            &:last-child:hover { transform: translateX(toRem(1.6)); }
        }

        i:has(+ .entries.error) { color: $color-status-error; }

        .entries {
            display: grid;
            gap: $gap-medium-mobile;  

            &.error { 
                + i { color: $color-status-error; }
                .entry {
                    input, i, .floating { color: $color-status-error; }
                    .progress { 
                        background-color: $color-status-error; 
                        box-shadow: 0 0 toRem(15) toRem(3) $color-status-error;
                    }

                    input { animation: shake .5s ease-in-out; }

                    @keyframes shake {
                        0% { transform: translateX(0); }
                        25% { transform: translateX(toRem(-5)); }
                        50% { transform: translateX(toRem(5)); }
                        75% { transform: translateX(toRem(-5)); }
                        100% { transform: translateX(0); }
                    }
                }
            }

            .entry {
                position: relative;
                display: grid;
                grid-template-columns: 1fr auto;
                gap: 0 $gap-small-mobile;
                overflow: hidden;
                transition: $transition;
    
                input { 
                    color: $color-secondary-500; 
                    transition: $transition;
                    padding-top: toRem(16);
                    padding-bottom: toRem(8);

                    &:focus + .floating, &:not(:placeholder-shown) + .floating {
                        transform: translateY(0);
                        font-size: calc($font-size-body-mobile * 0.8);
                    }
                }
    
                i {
                    font-size: toRem(14);
                    padding-top: toRem(16);
                    padding-right: toRem(8);
                    padding-bottom: toRem(8);
                }
    
                .floating {
                    position: absolute;
                    color: $color-secondary-500;
                    font-size: $font-size-body-mobile;
                    pointer-events: none;
                    transform: translateY(100%);
                    text-transform: uppercase;
                    transition: $transition;
                }
    
                .progress {
                    position: absolute;
                    left: 0;
                    bottom: 0;
                    width: 0%;
                    height: toRem(1);
                    background-color: $color-secondary-500;
                    transition: $transition;
                }
            } 
        }   
    }

    // Temporal Message
    span {
        background-color: transparent;
        color: $color-secondary-600;
        font-size: $font-size-title-large-mobile-max;
        font-weight: $font-weight-light;
        text-shadow: toRem(3) toRem(3) $color-primary-1000;
        animation: fadeIn 1s ease-in-out, fadeOut 1s ease-in-out 1s forwards;

        // Animation temporal message
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
            
        @keyframes fadeOut {
            from { opacity: 1; }
            to { opacity: 0; }
        }        
    }
}
